{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "PHP Security Audit",
          "rules": [
            {
              "id": "NullArgument",
              "help": {
                "text": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int.",
                "markdown": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int."
              },
              "name": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int."
              },
              "helpUri": "https://psalm.dev/057",
              "shortDescription": {
                "text": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int."
              }
            },
            {
              "id": "TooFewArguments",
              "help": {
                "text": "Too few arguments for define - expecting 2 but saw 1.",
                "markdown": "Too few arguments for define - expecting 2 but saw 1."
              },
              "name": "Too few arguments for define - expecting 2 but saw 1",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Too few arguments for define - expecting 2 but saw 1."
              },
              "helpUri": "https://psalm.dev/025",
              "shortDescription": {
                "text": "Too few arguments for define - expecting 2 but saw 1."
              }
            },
            {
              "id": "ReservedWord",
              "help": {
                "text": "Object is a reserved word.",
                "markdown": "Object is a reserved word."
              },
              "name": "Object is a reserved word",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Object is a reserved word."
              },
              "helpUri": "https://psalm.dev/095",
              "shortDescription": {
                "text": "Object is a reserved word."
              }
            },
            {
              "id": "ImplementedReturnTypeMismatch",
              "help": {
                "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Database::setcache 'object'.",
                "markdown": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Database::setcache 'object'."
              },
              "name": "The inherited return type 'null' for IDS Caching Interface::setCache is different to the implemented return type for IDS Caching Database::setcache 'object'",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Database::setcache 'object'."
              },
              "helpUri": "https://psalm.dev/123",
              "shortDescription": {
                "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Database::setcache 'object'."
              }
            },
            {
              "id": "ParamNameMismatch",
              "help": {
                "text": "Argument 1 of HTMLPurifier_AttrDef_CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier_AttrDef::validate.",
                "markdown": "Argument 1 of HTMLPurifier_AttrDef_CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier_AttrDef::validate."
              },
              "name": "Argument 1 of HTMLPurifier AttrDef CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier AttrDef::validate",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Argument 1 of HTMLPurifier_AttrDef_CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier_AttrDef::validate."
              },
              "helpUri": "https://psalm.dev/230",
              "shortDescription": {
                "text": "Argument 1 of HTMLPurifier_AttrDef_CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier_AttrDef::validate."
              }
            },
            {
              "id": "TypeDoesNotContainType",
              "help": {
                "text": "Type false for $caught['position'] is always false.",
                "markdown": "Type false for $caught['position'] is always false."
              },
              "name": "Type false for $caught['position'] is always false",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Type false for $caught['position'] is always false."
              },
              "helpUri": "https://psalm.dev/056",
              "shortDescription": {
                "text": "Type false for $caught['position'] is always false."
              }
            },
            {
              "id": "MoreSpecificReturnType",
              "help": {
                "text": "The declared return type 'Editable' for HTMLPurifier_DoctypeRegistry::register is more specific than the inferred return type 'object'.",
                "markdown": "The declared return type 'Editable' for HTMLPurifier_DoctypeRegistry::register is more specific than the inferred return type 'object'."
              },
              "name": "The declared return type 'Editable' for HTMLPurifier DoctypeRegistry::register is more specific than the inferred return type 'object'",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The declared return type 'Editable' for HTMLPurifier_DoctypeRegistry::register is more specific than the inferred return type 'object'."
              },
              "helpUri": "https://psalm.dev/070",
              "shortDescription": {
                "text": "The declared return type 'Editable' for HTMLPurifier_DoctypeRegistry::register is more specific than the inferred return type 'object'."
              }
            },
            {
              "id": "ArgumentTypeCoercion",
              "help": {
                "text": "Argument 1 of method_exists expects class-string|object, parent type string(DOMDocument) provided.",
                "markdown": "Argument 1 of method_exists expects class-string|object, parent type string(DOMDocument) provided."
              },
              "name": "Argument 1 of method exists expects class-string|object, parent type string(DOMDocument) provided",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Argument 1 of method_exists expects class-string|object, parent type string(DOMDocument) provided."
              },
              "helpUri": "https://psalm.dev/193",
              "shortDescription": {
                "text": "Argument 1 of method_exists expects class-string|object, parent type string(DOMDocument) provided."
              }
            },
            {
              "id": "TooManyArguments",
              "help": {
                "text": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1.",
                "markdown": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1."
              },
              "name": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1."
              },
              "helpUri": "https://psalm.dev/026",
              "shortDescription": {
                "text": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1."
              }
            },
            {
              "id": "ParadoxicalCondition",
              "help": {
                "text": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3)).",
                "markdown": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3))."
              },
              "name": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3))",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3))."
              },
              "helpUri": "https://psalm.dev/089",
              "shortDescription": {
                "text": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3))."
              }
            },
            {
              "id": "LoopInvalidation",
              "help": {
                "text": "Variable $n has already been assigned in a for/foreach loop.",
                "markdown": "Variable $n has already been assigned in a for/foreach loop."
              },
              "name": "Variable $n has already been assigned in a for/foreach loop",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Variable $n has already been assigned in a for/foreach loop."
              },
              "helpUri": "https://psalm.dev/130",
              "shortDescription": {
                "text": "Variable $n has already been assigned in a for/foreach loop."
              }
            },
            {
              "id": "EmptyArrayAccess",
              "help": {
                "text": "Cannot access value on empty array variable $ret.",
                "markdown": "Cannot access value on empty array variable $ret."
              },
              "name": "Cannot access value on empty array variable $ret",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Cannot access value on empty array variable $ret."
              },
              "helpUri": "https://psalm.dev/100",
              "shortDescription": {
                "text": "Cannot access value on empty array variable $ret."
              }
            },
            {
              "id": "TypeDoesNotContainNull",
              "help": {
                "text": "Cannot resolve types for $___mysqli_res - bool does not contain null.",
                "markdown": "Cannot resolve types for $___mysqli_res - bool does not contain null."
              },
              "name": "Cannot resolve types for $   mysqli res - bool does not contain null",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
              },
              "helpUri": "https://psalm.dev/090",
              "shortDescription": {
                "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
              }
            },
            {
              "id": "ForbiddenCode",
              "help": {
                "text": "Unsafe shell_exec.",
                "markdown": "Unsafe shell_exec."
              },
              "name": "Unsafe shell exec",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Unsafe shell_exec."
              },
              "helpUri": "https://psalm.dev/002",
              "shortDescription": {
                "text": "Unsafe shell_exec."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "PHP Security Audit"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "psalm",
            "--report-show-info=false",
            "--show-snippet=true",
            "--find-dead-code=always",
            "--find-unused-code=always",
            "-m",
            "--no-progress",
            "--no-file-cache",
            "--no-suggestions",
            "--no-cache",
            "--root=/app",
            "--report=/app/reports/audit-php-report.json"
          ],
          "executionSuccessful": true,
          "commandLine": "psalm --report-show-info=false --show-snippet=true --find-dead-code=always --find-unused-code=always -m --no-progress --no-file-cache --no-suggestions --no-cache --root=/app --report=/app/reports/audit-php-report.json",
          "endTimeUtc": "2020-12-10T14:06:19Z",
          "workingDirectory": {
            "uri": "file:///home/ec2-user/vulnerableapps/DVWA"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2020-12-10T14:06:19Z",
          "workingDirectory": {
            "uri": "file:///home/ec2-user/vulnerableapps/DVWA"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 144,
          "critical": 0,
          "high": 0,
          "medium": 144,
          "low": 0
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t}\n\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n"
                  },
                  "endLine": 149,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 5 of setcookie cannot be null, null value provided to parameter with type string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t}\n\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n"
                  },
                  "endLine": 149,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 6 of setcookie cannot be null, null value provided to parameter with type bool."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t}\n\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n"
                  },
                  "endLine": 149,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 3 of setcookie cannot be null, null value provided to parameter with type int."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n\n"
                  },
                  "endLine": 150,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 4 of setcookie cannot be null, null value provided to parameter with type string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n\n"
                  },
                  "endLine": 150,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 5 of setcookie cannot be null, null value provided to parameter with type string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n\n"
                  },
                  "endLine": 150,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 6 of setcookie cannot be null, null value provided to parameter with type bool."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPage.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\tsetcookie( session_name(), session_id(), null, '/', null, null, $httponly );\n\tsetcookie( 'security', $pSecurityLevel, NULL, NULL, NULL, NULL, $httponly );\n}\n\n"
                  },
                  "endLine": 150,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Too few arguments for define - expecting 2 but saw 1."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tdefine( 'DVWA System error- WEB_PAGE_TO_ROOT undefined' );\n"
                  },
                  "startLine": 4
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/dvwa/includes/dvwaPhpIds.inc.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "if( !defined( 'DVWA_WEB_PAGE_TO_ROOT' ) ) {\n\tdefine( 'DVWA System error- WEB_PAGE_TO_ROOT undefined' );\n\texit;\n}\n"
                  },
                  "endLine": 6,
                  "startLine": 3
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TooFewArguments",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Object is a reserved word."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "class IdsComponent extends Object {\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/docs/examples/cakephp/ids.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": " */\nclass IdsComponent extends Object {\n\n    /**\n"
                  },
                  "endLine": 75,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ReservedWord",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Database::setcache 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return object $this\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/Database.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @throws PDOException if a db error occurred\n     * @return object $this\n     */\n    public function setCache(array $data) \n"
                  },
                  "endLine": 146,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tnull, \n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/Factory.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t'/\\W+/m', \n\t\t\tnull, \n\t\t\tucfirst($init->config['Caching']['caching'])\n\t\t);\n"
                  },
                  "endLine": 70,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_File::setcache 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return object $this\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/File.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @throws Exception if cache file couldn't be created\n     * @return object $this\n     */\n    public function setCache(array $data) \n"
                  },
                  "endLine": 130,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (!is_writable(preg_replace('/[\\/][^\\/]+\\.[^\\/]++$/', null, \n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/File.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        if (!is_writable(preg_replace('/[\\/][^\\/]+\\.[^\\/]++$/', null, \n            $this->path))) {\n            throw new Exception('Temp directory ' . \n"
                  },
                  "endLine": 135,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Memcached::setcache 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return object $this\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/Memcached.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @throws Exception if necessary files aren't writeable\n     * @return object $this\n     */\n    public function setCache(array $data) \n"
                  },
                  "endLine": 149,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Caching_Interface::setCache is different to the implemented return type for IDS_Caching_Session::setcache 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return object $this\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Caching/Session.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * \n     * @return object $this\n     */\n    public function setCache(array $data) \n"
                  },
                  "endLine": 115,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 3 of preg_split cannot be null, null value provided to parameter with type int."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                                        null,\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                        (implode('', $matches[0])),\n                                        null,\n                                        PREG_SPLIT_DELIM_CAPTURE);\n\n"
                  },
                  "endLine": 161,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $value   = preg_replace('/\\/(?:\\d+|null)/', null, $value);\n"
                  },
                  "startLine": 324
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        $value   = preg_replace('/\"\\s+\\d/', '\"', $value);\n        $value   = preg_replace('/\\/(?:\\d+|null)/', null, $value);\n\n        return $value;\n"
                  },
                  "endLine": 326,
                  "startLine": 323
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            '\\w|%EF%BB%BF|%EF%BF%BD)|(?:&#(?:65|8)\\d{3};?)/i', null,\n"
                  },
                  "startLine": 351
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        $value = urldecode(preg_replace('/(?:%E(?:2|3)%8(?:0|1)%(?:A|8|9)' .\n            '\\w|%EF%BB%BF|%EF%BF%BD)|(?:&#(?:65|8)\\d{3};?)/i', null,\n                $urlencoded));\n\n"
                  },
                  "endLine": 353,
                  "startLine": 350
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $value = preg_replace('/(?:&[#x]*(200|820|200|820|zwn?j|lrm|rlm)\\w?;?)/i', null,\n"
                  },
                  "startLine": 354
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        $value = preg_replace('/(?:&[#x]*(200|820|200|820|zwn?j|lrm|rlm)\\w?;?)/i', null,\n                $value);\n\n"
                  },
                  "endLine": 356,
                  "startLine": 353
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                '(?:&#x(?:d[c-f])\\w{2};?)/i', null,\n"
                  },
                  "startLine": 360
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                '(?:&#x(?:fe|20)\\w{2};?)|' .\n                '(?:&#x(?:d[c-f])\\w{2};?)/i', null,\n                $value);\n\n"
                  },
                  "endLine": 362,
                  "startLine": 359
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $converted = preg_replace($pattern, null, $compare);\n"
                  },
                  "startLine": 551
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        // strip out concatenations\n        $converted = preg_replace($pattern, null, $compare);\n\n        //strip object traversal\n"
                  },
                  "endLine": 553,
                  "startLine": 550
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $value = preg_replace('/{[\\w-]{8,9}\\}(?:\\{[\\w=]{8}\\}){2}/', null, $value);\n"
                  },
                  "startLine": 591
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        //OpenID login tokens\n        $value = preg_replace('/{[\\w-]{8,9}\\}(?:\\{[\\w=]{8}\\}){2}/', null, $value);\n\n        //convert Content and \\sdo\\s to null\n"
                  },
                  "endLine": 593,
                  "startLine": 590
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $value = preg_replace('/Content|\\Wdo\\s/', null, $value);\n"
                  },
                  "startLine": 594
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        //convert Content and \\sdo\\s to null\n        $value = preg_replace('/Content|\\Wdo\\s/', null, $value);\n\n        //strip emoticons\n"
                  },
                  "endLine": 596,
                  "startLine": 593
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            null,\n"
                  },
                  "startLine": 599
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            '/(?:\\s[:;]-[)\\/PD]+)|(?:\\s;[)PD]+)|(?:\\s:[)PD]+)|-\\.-|\\^\\^/m',\n            null,\n            $value\n        );\n"
                  },
                  "endLine": 601,
                  "startLine": 598
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $value = preg_replace('/^\\/|\\/$|,\\/\\n|\\/,/', null, $value);\n"
                  },
                  "startLine": 613
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        //normalize JS backspace linebreaks\n        $value = preg_replace('/^\\/|\\/$|,\\/\\n|\\/,/', null, $value);\n        \n        return $value;\n"
                  },
                  "endLine": 615,
                  "startLine": 612
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $tmp_value = preg_replace('/\\s{4}/m', null, $value);\n"
                  },
                  "startLine": 638
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            //strip padding\n            $tmp_value = preg_replace('/\\s{4}/m', null, $value);\n            $tmp_value = preg_replace(\n                '/\\s{4}|[\\p{L}\\d\\+\\-,.%]{8,}/m', \n"
                  },
                  "endLine": 640,
                  "startLine": 637
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $tmp_value = preg_replace('/\"[\\p{L}\\d\\s]+\"/m', null, $tmp_value);\n"
                  },
                  "startLine": 647
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $tmp_value = preg_replace('/([*.!?+-])\\1{1,}/m', '$1', $tmp_value);\n            $tmp_value = preg_replace('/\"[\\p{L}\\d\\s]+\"/m', null, $tmp_value);\n\n            $stripped_length = strlen(preg_replace('/[\\d\\s\\p{L}.:,%&\\/><\\-)]+/m',\n"
                  },
                  "endLine": 649,
                  "startLine": 646
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                null, $tmp_value));\n"
                  },
                  "startLine": 650
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $stripped_length = strlen(preg_replace('/[\\d\\s\\p{L}.:,%&\\/><\\-)]+/m',\n                null, $tmp_value));\n            $overall_length  = strlen(\n                preg_replace('/([\\d\\s\\p{L}:,]{3,})+/m', 'aaa',\n"
                  },
                  "endLine": 652,
                  "startLine": 649
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                preg_replace('/\\s{2,}/m', null, $tmp_value))\n"
                  },
                  "startLine": 653
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                preg_replace('/([\\d\\s\\p{L}:,]{3,})+/m', 'aaa',\n                preg_replace('/\\s{2,}/m', null, $tmp_value))\n            );\n\n"
                  },
                  "endLine": 655,
                  "startLine": 652
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $converted =  preg_replace('/[\\w\\s\\p{L},.!]/', null, $value);\n"
                  },
                  "startLine": 670
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            // Replace all non-special chars\n            $converted =  preg_replace('/[\\w\\s\\p{L},.!]/', null, $value);\n\n            // Split string into an array, unify and sort\n"
                  },
                  "endLine": 672,
                  "startLine": 669
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $converted = preg_replace('/[^:(+]/', null, stripslashes($converted));\n"
                  },
                  "startLine": 694
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Converter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $converted = preg_replace('/[!?:=]/', ':', $converted);\n            $converted = preg_replace('/[^:(+]/', null, stripslashes($converted));\n\n            // Sort again and implode\n"
                  },
                  "endLine": 696,
                  "startLine": 693
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of simplexml_load_file cannot be null, null value provided to parameter with type string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                                                       null,\n"
                  },
                  "startLine": 207
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Filter/Storage.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                        $filters = simplexml_load_file($this->source,\n                                                       null,\n                                                       LIBXML_COMPACT);\n                    } else {\n"
                  },
                  "endLine": 209,
                  "startLine": 206
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Log_Interface::execute is different to the implemented return type for IDS_Log_Database::execute 'bool'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return boolean\n"
                  },
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Log/Database.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @throws Exception if db error occurred\n     * @return boolean\n     */\n    public function execute(IDS_Report $data) \n"
                  },
                  "endLine": 246,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "The inherited return type 'null' for IDS_Log_Interface::execute is different to the implemented return type for IDS_Log_Email::execute 'bool'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return boolean\n"
                  },
                  "startLine": 307
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Log/Email.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @throws Exception if data is no string\n     * @return boolean\n     */\n    public function execute(IDS_Report $data)\n"
                  },
                  "endLine": 309,
                  "startLine": 306
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ImplementedReturnTypeMismatch",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $purified = preg_replace('/\\s+alt=\"[^\"]*\"/m', null, $purified);\n"
                  },
                  "startLine": 426
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Monitor.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "         */\n        $purified = preg_replace('/\\s+alt=\"[^\"]*\"/m', null, $purified);\n        $purified = preg_replace('/=?\\s*\"\\s*\"/m', null, $purified);\n\n"
                  },
                  "endLine": 428,
                  "startLine": 425
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $purified = preg_replace('/=?\\s*\"\\s*\"/m', null, $purified);\n"
                  },
                  "startLine": 427
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Monitor.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        $purified = preg_replace('/\\s+alt=\"[^\"]*\"/m', null, $purified);\n        $purified = preg_replace('/=?\\s*\"\\s*\"/m', null, $purified);\n\n        $original = preg_replace('/=?\\s*\"\\s*\"/m', null, $original);\n"
                  },
                  "endLine": 429,
                  "startLine": 426
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $original = preg_replace('/=?\\s*\"\\s*\"/m', null, $original);\n"
                  },
                  "startLine": 429
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Monitor.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        $original = preg_replace('/=?\\s*\"\\s*\"/m', null, $original);\n        $original = preg_replace('/\\s+alt=?/m', null, $original);\n\n"
                  },
                  "endLine": 431,
                  "startLine": 428
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of preg_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $original = preg_replace('/\\s+alt=?/m', null, $original);\n"
                  },
                  "startLine": 430
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/Monitor.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        $original = preg_replace('/=?\\s*\"\\s*\"/m', null, $original);\n        $original = preg_replace('/\\s+alt=?/m', null, $original);\n\n        // check which string is longer\n"
                  },
                  "endLine": 432,
                  "startLine": 429
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS::validate has wrong name $css, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($css, $config, $context) {\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($css, $config, $context) {\n        \n        $css = $this->parseCDATA($css);\n"
                  },
                  "endLine": 19,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS_AlphaValue::validate has wrong name $number, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($number, $config, $context) {\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/AlphaValue.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($number, $config, $context) {\n        $result = parent::validate($number, $config, $context);\n        if ($result === false) return $result;\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Type false for $caught['position'] is always false."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($caught['position'] !== false) {\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/Background.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if (!$i) return false;\n        if ($caught['position'] !== false) {\n            $caught['position'] = $this->info['background-position']->\n                validate($caught['position'], $config, $context);\n"
                  },
                  "endLine": 71,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS_Color::validate has wrong name $color, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($color, $config, $context) {\n"
                  },
                  "startLine": 9
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/Color.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($color, $config, $context) {\n        \n        static $colors = null;\n"
                  },
                  "endLine": 11,
                  "startLine": 8
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS_Filter::validate has wrong name $value, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($value, $config, $context) {\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/Filter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($value, $config, $context) {\n        $value = $this->parseCDATA($value);\n        if ($value === 'none') return $value;\n"
                  },
                  "endLine": 19,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "if (false) is impossible."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($caught['type']) $ret[] = $caught['type'];\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/ListStyle.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        // construct type\n        if ($caught['type']) $ret[] = $caught['type'];\n        \n        // construct image\n"
                  },
                  "endLine": 65,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "if (false) is impossible."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($caught['image']) $ret[] = $caught['image'];\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/ListStyle.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        // construct image\n        if ($caught['image']) $ret[] = $caught['image'];\n        \n        // construct position\n"
                  },
                  "endLine": 68,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "if (false) is impossible."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($caught['position']) $ret[] = $caught['position'];\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/ListStyle.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        // construct position\n        if ($caught['position']) $ret[] = $caught['position'];\n        \n        if (empty($ret)) return false;\n"
                  },
                  "endLine": 71,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS_Number::validate has wrong name $number, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($number, $config, $context) {\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/Number.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     */\n    public function validate($number, $config, $context) {\n        \n        $number = $this->parseCDATA($number);\n"
                  },
                  "endLine": 27,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_CSS_URI::validate has wrong name $uri_string, expecting $uri as defined by HTMLPurifier_AttrDef_URI::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($uri_string, $config, $context) {\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/CSS/URI.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($uri_string, $config, $context) {\n        // parse the URI out of the string and then pass it onto\n        // the parent object\n"
                  },
                  "endLine": 21,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_HTML_ID::validate has wrong name $id, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($id, $config, $context) {\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/HTML/ID.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($id, $config, $context) {\n        \n        if (!$config->get('Attr', 'EnableID')) return false;\n"
                  },
                  "endLine": 20,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_Integer::validate has wrong name $integer, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($integer, $config, $context) {\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/Integer.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($integer, $config, $context) {\n        \n        $integer = $this->parseCDATA($integer);\n"
                  },
                  "endLine": 43,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_URI::validate has wrong name $uri, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($uri, $config, $context) {\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($uri, $config, $context) {\n        \n        if ($config->get('URI', 'Disable')) return false;\n"
                  },
                  "endLine": 28,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_URI_IPv4::validate has wrong name $aIP, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($aIP, $config, $context) {\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI/IPv4.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($aIP, $config, $context) {\n        \n        if (!$this->ip4) $this->_loadRegex();\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_AttrDef_URI_IPv6::validate has wrong name $aIP, expecting $string as defined by HTMLPurifier_AttrDef::validate."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function validate($aIP, $config, $context) {\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI/IPv6.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function validate($aIP, $config, $context) {\n        \n        if (!$this->ip4) $this->_loadRegex();\n"
                  },
                  "endLine": 14,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Type false for $thead is always false."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($thead !== false)   $ret = array_merge($ret, $thead);\n"
                  },
                  "startLine": 127
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/ChildDef/Table.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if ($cols !== false)    foreach ($cols as $token_array) $ret = array_merge($ret, $token_array);\n        if ($thead !== false)   $ret = array_merge($ret, $thead);\n        if ($tfoot !== false)   $ret = array_merge($ret, $tfoot);\n        foreach ($content as $token_array) $ret = array_merge($ret, $token_array);\n"
                  },
                  "endLine": 129,
                  "startLine": 126
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Type false for $tfoot is always false."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if ($tfoot !== false)   $ret = array_merge($ret, $tfoot);\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/ChildDef/Table.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if ($thead !== false)   $ret = array_merge($ret, $thead);\n        if ($tfoot !== false)   $ret = array_merge($ret, $tfoot);\n        foreach ($content as $token_array) $ret = array_merge($ret, $token_array);\n        if (!empty($collection) && $is_collecting == false){\n"
                  },
                  "endLine": 130,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "null does not contain true."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        } elseif (HTMLPurifier_ConfigSchema::$singleton === null || $prototype === true) {\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/ConfigSchema.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            HTMLPurifier_ConfigSchema::$singleton = $prototype;\n        } elseif (HTMLPurifier_ConfigSchema::$singleton === null || $prototype === true) {\n            HTMLPurifier_ConfigSchema::$singleton = HTMLPurifier_ConfigSchema::makeFromSerial();\n        }\n"
                  },
                  "endLine": 65,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "null does not contain true."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        } elseif ($instance === null || $prototype === true) {\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/DefinitionCacheFactory.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $instance = $prototype;\n        } elseif ($instance === null || $prototype === true) {\n            $instance = new HTMLPurifier_DefinitionCacheFactory();\n            $instance->setup();\n"
                  },
                  "endLine": 29,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The declared return type 'Editable' for HTMLPurifier_DoctypeRegistry::register is more specific than the inferred return type 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return Editable registered doctype\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/DoctypeRegistry.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @param $aliases Alias names for doctype\n     * @return Editable registered doctype\n     */\n    public function register($doctype, $xml = true, $modules = array(),\n"
                  },
                  "endLine": 26,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "MoreSpecificReturnType",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "Type null for $prototype is always falsy."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        } elseif ($instance === null || $prototype == true) {\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/LanguageFactory.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $instance = $prototype;\n        } elseif ($instance === null || $prototype == true) {\n            $instance = new HTMLPurifier_LanguageFactory();\n            $instance->setup();\n"
                  },
                  "endLine": 63,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "The declared return type 'Concrete' for HTMLPurifier_Lexer::create is more specific than the inferred return type 'object'."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "     * @return Concrete lexer.\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "     * @param $config Instance of HTMLPurifier_Config\n     * @return Concrete lexer.\n     */\n    public static function create($config) {\n"
                  },
                  "endLine": 68,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "MoreSpecificReturnType",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of method_exists expects class-string|object, parent type string(DOMDocument) provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    method_exists('DOMDocument', 'loadHTML') &&\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    class_exists('DOMDocument') &&\n                    method_exists('DOMDocument', 'loadHTML') &&\n                    !extension_loaded('domxml')\n                ) {\n"
                  },
                  "endLine": 100,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Type object for $inst is never falsy."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (!$inst) throw new HTMLPurifier_Exception('No lexer was instantiated');\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        if (!$inst) throw new HTMLPurifier_Exception('No lexer was instantiated');\n        \n        // once PHP DOM implements native line numbers, or we\n"
                  },
                  "endLine": 130,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_Lexer_DOMLex::tokenizeHTML has wrong name $html, expecting $string as defined by HTMLPurifier_Lexer::tokenizeHTML."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function tokenizeHTML($html, $config, $context) {\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/DOMLex.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function tokenizeHTML($html, $config, $context) {\n        \n        $html = $this->normalize($html, $config, $context);\n"
                  },
                  "endLine": 40,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_Lexer_DirectLex::tokenizeHTML has wrong name $html, expecting $string as defined by HTMLPurifier_Lexer::tokenizeHTML."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function tokenizeHTML($html, $config, $context) {\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/DirectLex.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function tokenizeHTML($html, $config, $context) {\n        \n        // special normalization for script tags without any armor\n"
                  },
                  "endLine": 33,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "int does not contain false."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                if ($cursor === false) {\n"
                  },
                  "startLine": 441
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/DirectLex.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                if ($cursor === false) {\n                    $array[$key] = '';\n                    break;\n"
                  },
                  "endLine": 443,
                  "startLine": 440
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of HTMLPurifier_Lexer_PH5P::tokenizeHTML has wrong name $html, expecting $string as defined by HTMLPurifier_Lexer::tokenizeHTML."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public function tokenizeHTML($html, $config, $context) {\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    public function tokenizeHTML($html, $config, $context) {\n        $new_html = $this->normalize($html, $config, $context);\n        $new_html = $this->wrapHTML($new_html, $config, $context);\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParamNameMismatch",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of str_replace cannot be null, null value provided to parameter with type array<array-key, float|int|string>|string."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        $data = str_replace(\"\\r\", null, $data);\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        $data = str_replace(\"\\r\\n\", \"\\n\", $data);\n        $data = str_replace(\"\\r\", null, $data);\n\n        $this->data = $data;\n"
                  },
                  "endLine": 131,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "NullArgument",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $this->entityInAttributeValueState('double');\n"
                  },
                  "startLine": 701
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            Switch to the entity in attribute value state. */\n            $this->entityInAttributeValueState('double');\n\n        } elseif($this->char === $this->EOF) {\n"
                  },
                  "endLine": 703,
                  "startLine": 700
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TooManyArguments",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Too many arguments for method HTML5::entityinattributevaluestate - saw 1."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $this->entityInAttributeValueState('single');\n"
                  },
                  "startLine": 736
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            Switch to the entity in attribute value state. */\n            $this->entityInAttributeValueState('single');\n\n        } elseif($this->char === $this->EOF) {\n"
                  },
                  "endLine": 738,
                  "startLine": 735
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TooManyArguments",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Class DOMDocumentType has no __construct, but arguments were passed."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $doctype = new DOMDocumentType(null, null, 'HTML');\n"
                  },
                  "startLine": 1286
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            set to null, empty lists, or the empty string as appropriate. */\n            $doctype = new DOMDocumentType(null, null, 'HTML');\n\n            /* Then, switch to the root element phase of the tree construction\n"
                  },
                  "endLine": 1288,
                  "startLine": 1285
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TooManyArguments",
          "ruleIndex": 8
        },
        {
          "message": {
            "markdown": "",
            "text": "Condition ($this->mode is ~int(3)) contradicts a previously-established condition ($this->mode is not ~int(3))."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                case self::END_PHASE:  return $this->trailingEndPhase($token); break;\n"
                  },
                  "startLine": 1395
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                case self::AFTR_FRAME: return $this->afterFrameset($token); break;\n                case self::END_PHASE:  return $this->trailingEndPhase($token); break;\n            }\n        }\n"
                  },
                  "endLine": 1397,
                  "startLine": 1394
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ParadoxicalCondition",
          "ruleIndex": 9
        },
        {
          "message": {
            "markdown": "",
            "text": "Variable $n has already been assigned in a for/foreach loop."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                                $n = -1;\n"
                  },
                  "startLine": 2218
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            if($this->stack[$n]->nodeName === $token['name']) {\n                                $n = -1;\n                            }\n\n"
                  },
                  "endLine": 2220,
                  "startLine": 2217
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "LoopInvalidation",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Variable $n has already been assigned in a for/foreach loop."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                                $n = -1;\n"
                  },
                  "startLine": 2297
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            if($this->stack[$n]->nodeName === $token['name']) {\n                                $n = -1;\n                            }\n\n"
                  },
                  "endLine": 2299,
                  "startLine": 2296
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "LoopInvalidation",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Variable $n has already been assigned in a for/foreach loop."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                                $n = -1;\n"
                  },
                  "startLine": 2564
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Lexer/PH5P.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            if($this->stack[$n]->nodeName === $token['name']) {\n                                $n = -1;\n                            }\n\n"
                  },
                  "endLine": 2566,
                  "startLine": 2563
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "LoopInvalidation",
          "ruleIndex": 10
        },
        {
          "message": {
            "markdown": "",
            "text": "Type true for $reprocess is never falsy."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            $reprocess ? $reprocess = false : $t++\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Strategy/MakeWellFormed.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            // only increment if we don't need to reprocess\n            $reprocess ? $reprocess = false : $t++\n        ) {\n            \n"
                  },
                  "endLine": 117,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot access value on empty array variable $ret."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                $ret[$state] .= \"$line\\n\";\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/StringHashParser.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            } else {\n                $ret[$state] .= \"$line\\n\";\n            }\n        } while (!feof($fh));\n"
                  },
                  "endLine": 100,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "EmptyArrayAccess",
          "ruleIndex": 11
        },
        {
          "message": {
            "markdown": "",
            "text": "string(HTMLPurifier_Token_Start) cannot be identical to class-string<HTMLPurifier_Token&static>."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Start':      return 'start';\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Token.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        switch (get_class($this)) {\n          case 'HTMLPurifier_Token_Start':      return 'start';\n          case 'HTMLPurifier_Token_Empty':      return 'empty';\n          case 'HTMLPurifier_Token_End':        return 'end';\n"
                  },
                  "endLine": 29,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "string(HTMLPurifier_Token_Empty) cannot be identical to class-string<HTMLPurifier_Token&static>."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Empty':      return 'empty';\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Token.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Start':      return 'start';\n          case 'HTMLPurifier_Token_Empty':      return 'empty';\n          case 'HTMLPurifier_Token_End':        return 'end';\n          case 'HTMLPurifier_Token_Text':       return 'text';\n"
                  },
                  "endLine": 30,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "string(HTMLPurifier_Token_End) cannot be identical to class-string<HTMLPurifier_Token&static>."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_End':        return 'end';\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Token.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Empty':      return 'empty';\n          case 'HTMLPurifier_Token_End':        return 'end';\n          case 'HTMLPurifier_Token_Text':       return 'text';\n          case 'HTMLPurifier_Token_Comment':    return 'comment';\n"
                  },
                  "endLine": 31,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "string(HTMLPurifier_Token_Text) cannot be identical to class-string<HTMLPurifier_Token&static>."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Text':       return 'text';\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Token.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_End':        return 'end';\n          case 'HTMLPurifier_Token_Text':       return 'text';\n          case 'HTMLPurifier_Token_Comment':    return 'comment';\n          default: return null;\n"
                  },
                  "endLine": 32,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "string(HTMLPurifier_Token_Comment) cannot be identical to class-string<HTMLPurifier_Token&static>."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Comment':    return 'comment';\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/Token.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "          case 'HTMLPurifier_Token_Text':       return 'text';\n          case 'HTMLPurifier_Token_Comment':    return 'comment';\n          default: return null;\n        }\n"
                  },
                  "endLine": 33,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Type null for $prototype is always falsy."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        } elseif ($instance === null || $prototype == true) {\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/URISchemeRegistry.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            $instance = $prototype;\n        } elseif ($instance === null || $prototype == true) {\n            $instance = new HTMLPurifier_URISchemeRegistry();\n        }\n"
                  },
                  "endLine": 22,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainType",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of bcadd expects numeric-string, parent type non-empty-string provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                $n = bcadd($n, $neg . '0.' .  str_repeat('0', $rp) . '5', $rp + 1);\n"
                  },
                  "startLine": 219
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/UnitConverter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            if ($rp >= 0) {\n                $n = bcadd($n, $neg . '0.' .  str_repeat('0', $rp) . '5', $rp + 1);\n                $n = bcdiv($n, '1', $rp);\n            } else {\n"
                  },
                  "endLine": 221,
                  "startLine": 218
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 2 of bcadd expects numeric-string, parent type non-empty-string provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                $n = bcadd($n, $neg . '5' . str_repeat('0', $new_log - $sigfigs), 0);\n"
                  },
                  "startLine": 224
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/UnitConverter.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                // form of numbers that comes out of bcmath.\n                $n = bcadd($n, $neg . '5' . str_repeat('0', $new_log - $sigfigs), 0);\n                $n = substr($n, 0, $sigfigs + strlen($neg)) . str_repeat('0', $new_log - $sigfigs + 1);\n            }\n"
                  },
                  "endLine": 226,
                  "startLine": 223
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Sanitise password input\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass = md5( $pass );\n\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\tif( $result && mysqli_num_rows( $result ) == 1 ) {\n"
                  },
                  "endLine": 22,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 39,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$user = stripslashes( $user );\n\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Sanitise password input\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass = stripslashes( $pass );\n\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass = md5( $pass );\n\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\tif( $result && mysqli_num_rows( $result ) == 1 ) {\n"
                  },
                  "endLine": 15,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 31,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$user = $_GET[ 'username' ];\n\t$user = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $user ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Sanitise password input\n"
                  },
                  "endLine": 8,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass = $_GET[ 'password' ];\n\t$pass = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass = md5( $pass );\n\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"SELECT * FROM `users` WHERE user = '$user' AND password = '$pass';\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\tif( $result && mysqli_num_rows( $result ) == 1 ) {\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/brute/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 34,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tif ($pass_new == $pass_conf) {\n\t\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 28,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"' LIMIT 1;\";\n\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t\t// Feedback for user\n"
                  },
                  "endLine": 33,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 51,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass_new  = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass_new  = stripslashes( $pass_new );\n\t$pass_new  = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass_new  = md5( $pass_new );\n\n"
                  },
                  "endLine": 15,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass_conf = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_conf ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass_conf = stripslashes( $pass_conf );\n\t$pass_conf = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_conf ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass_conf = md5( $pass_conf );\n\n"
                  },
                  "endLine": 20,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass_curr = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_curr ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_curr ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass_curr = md5( $pass_curr );\n\n"
                  },
                  "endLine": 25,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 58,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t// Feedback for the end user\n"
                  },
                  "endLine": 63,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 74,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 66,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t// Feedback for the end user\n"
                  },
                  "endLine": 71,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/captcha/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 82,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 16,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t// Feedback for the user\n"
                  },
                  "endLine": 21,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 31,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$pass_curr = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_curr ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$pass_curr = stripslashes( $pass_curr );\n\t$pass_curr = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_curr ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$pass_curr = md5( $pass_curr );\n\n"
                  },
                  "endLine": 16,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t$pass_new = stripslashes( $pass_new );\n\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 29,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 11
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// They do!\n\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 13,
                  "startLine": 10
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t// Feedback for the user\n"
                  },
                  "endLine": 18,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 28,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t// They do!\n\t\t\t$pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t\t\t$pass_new = md5( $pass_new );\n\n"
                  },
                  "endLine": 15,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t$insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n\t\t\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t\t\t// Feedback for the user\n"
                  },
                  "endLine": 20,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/csrf/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 35,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  ' . $target );\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// Windows\n\t\t$cmd = shell_exec( 'ping  ' . $target );\n\t}\n\telse {\n"
                  },
                  "endLine": 28,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// *nix\n\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n\t}\n\n"
                  },
                  "endLine": 32,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$cmd = shell_exec( 'ping  ' . $target );\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t// Windows\n\t\t\t$cmd = shell_exec( 'ping  ' . $target );\n\t\t}\n\t\telse {\n"
                  },
                  "endLine": 24,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t// *nix\n\t\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n\t\t}\n\n"
                  },
                  "endLine": 28,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  ' . $target );\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// Windows\n\t\t$cmd = shell_exec( 'ping  ' . $target );\n\t}\n\telse {\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n"
                  },
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// *nix\n\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n\t}\n\n"
                  },
                  "endLine": 16,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  ' . $target );\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// Windows\n\t\t$cmd = shell_exec( 'ping  ' . $target );\n\t}\n\telse {\n"
                  },
                  "endLine": 21,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Unsafe shell_exec."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/exec/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t// *nix\n\t\t$cmd = shell_exec( 'ping  -c 4 ' . $target );\n\t}\n\n"
                  },
                  "endLine": 25,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ForbiddenCode",
          "ruleIndex": 13
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\t\t\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\t\t\n}\n\n"
                  },
                  "endLine": 23,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 9
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t// Get results\n"
                  },
                  "endLine": 11,
                  "startLine": 8
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "$query  = \"SELECT COUNT(*) FROM users;\";\n$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n$number_of_rows = mysqli_fetch_row( $result )[0];\n\n"
                  },
                  "endLine": 29,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli_blind/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 32,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Cannot resolve types for $___mysqli_res - bool does not contain null."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli_blind/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\t((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n}\n\n"
                  },
                  "endLine": 27,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "TypeDoesNotContainNull",
          "ruleIndex": 12
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$id = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $id ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/sqli_blind/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$id = $_POST[ 'id' ];\n\t$id = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $id ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Check database\n"
                  },
                  "endLine": 8,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$message = strip_tags( addslashes( $message ) );\n\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$message = htmlspecialchars( $message );\n\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$name = preg_replace( '/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $name );\n\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Update database\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/high.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t//mysql_close();\n"
                  },
                  "endLine": 21,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$message = stripslashes( $message );\n\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$message = htmlspecialchars( $message );\n\n"
                  },
                  "endLine": 15,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/impossible.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$name = stripslashes( $name );\n\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$name = htmlspecialchars( $name );\n\n"
                  },
                  "endLine": 20,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$message = stripslashes( $message );\n\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Sanitize name input\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t// Sanitize name input\n\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Update database\n"
                  },
                  "endLine": 15,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/low.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t//mysql_close();\n"
                  },
                  "endLine": 19,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 10
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$message = strip_tags( addslashes( $message ) );\n\t$message = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $message ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\t$message = htmlspecialchars( $message );\n\n"
                  },
                  "endLine": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_real_escape_string expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$name = str_replace( '<script>', '', $name );\n\t$name = ((isset($GLOBALS[\"___mysqli_ston\"]) && is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $name ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n\n\t// Update database\n"
                  },
                  "endLine": 17,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        },
        {
          "message": {
            "markdown": "",
            "text": "Argument 1 of mysqli_error expects mysqli, parent type object provided."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/ec2-user/vulnerableapps/DVWA/vulnerabilities/xss_s/source/medium.php"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t$query  = \"INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );\";\n\t$result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $query ) or die( '<pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '</pre>' );\n\n\t//mysql_close();\n"
                  },
                  "endLine": 21,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "baselineState": "new",
          "partialFingerprints": {},
          "ruleId": "ArgumentTypeCoercion",
          "ruleIndex": 7
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "5cb80179-d79b-4449-8728-932447839a7b"
      },
      "versionControlProvenance": [
        {
          "branch": "master",
          "repositoryUri": "https://github.com/digininja/DVWA",
          "revisionId": "ba23da2d1808f6e7df004b304c2aea92442092d3"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "5cb80179-d79b-4449-8728-932447839a7b",
      "runGuid": "8110d826-0d93-4e3c-9b42-07d41cbbf7d1"
    }
  ]
}